{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/anon/Documents/VSCode/dapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/anon/Documents/VSCode/dapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\n\nvar _awaitAsyncGenerator = require(\"/Users/anon/Documents/VSCode/dapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/anon/Documents/VSCode/dapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/Users/anon/Documents/VSCode/dapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cid = require('multiformats/cid');\n\nvar objectToCamelWithMetadata = require('../lib/object-to-camel-with-metadata.js');\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar createLs = configure.configure(function (api) {\n  function ls(_x) {\n    return _ls.apply(this, arguments);\n  }\n\n  function _ls() {\n    _ls = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path) {\n      var options,\n          res,\n          _iteratorAbruptCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          result,\n          _iterator2,\n          _step2,\n          entry,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n              if (path) {\n                _context.next = 3;\n                break;\n              }\n\n              throw new Error('ipfs.files.ls requires a path');\n\n            case 3:\n              _context.next = 5;\n              return _awaitAsyncGenerator(api.post('files/ls', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams.toUrlSearchParams(_objectSpread({\n                  arg: cid.CID.asCID(path) ? \"/ipfs/\".concat(path) : path,\n                  long: true\n                }, options, {\n                  stream: true\n                })),\n                headers: options.headers\n              }));\n\n            case 5:\n              res = _context.sent;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 8;\n              _iterator = _asyncIterator(res.ndjson());\n\n            case 10:\n              _context.next = 12;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 12:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 39;\n                break;\n              }\n\n              result = _step.value;\n\n              if (!('Entries' in result)) {\n                _context.next = 34;\n                break;\n              }\n\n              _iterator2 = _createForOfIteratorHelper(result.Entries || []);\n              _context.prev = 16;\n\n              _iterator2.s();\n\n            case 18:\n              if ((_step2 = _iterator2.n()).done) {\n                _context.next = 24;\n                break;\n              }\n\n              entry = _step2.value;\n              _context.next = 22;\n              return toCoreInterface(objectToCamelWithMetadata.objectToCamelWithMetadata(entry));\n\n            case 22:\n              _context.next = 18;\n              break;\n\n            case 24:\n              _context.next = 29;\n              break;\n\n            case 26:\n              _context.prev = 26;\n              _context.t0 = _context[\"catch\"](16);\n\n              _iterator2.e(_context.t0);\n\n            case 29:\n              _context.prev = 29;\n\n              _iterator2.f();\n\n              return _context.finish(29);\n\n            case 32:\n              _context.next = 36;\n              break;\n\n            case 34:\n              _context.next = 36;\n              return toCoreInterface(objectToCamelWithMetadata.objectToCamelWithMetadata(result));\n\n            case 36:\n              _iteratorAbruptCompletion = false;\n              _context.next = 10;\n              break;\n\n            case 39:\n              _context.next = 45;\n              break;\n\n            case 41:\n              _context.prev = 41;\n              _context.t1 = _context[\"catch\"](8);\n              _didIteratorError = true;\n              _iteratorError = _context.t1;\n\n            case 45:\n              _context.prev = 45;\n              _context.prev = 46;\n\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 50;\n                break;\n              }\n\n              _context.next = 50;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 50:\n              _context.prev = 50;\n\n              if (!_didIteratorError) {\n                _context.next = 53;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 53:\n              return _context.finish(50);\n\n            case 54:\n              return _context.finish(45);\n\n            case 55:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[8, 41, 45, 55], [16, 26, 29, 32], [46,, 50, 54]]);\n    }));\n    return _ls.apply(this, arguments);\n  }\n\n  return ls;\n});\n\nfunction toCoreInterface(entry) {\n  if (entry.hash) {\n    entry.cid = cid.CID.parse(entry.hash);\n  }\n\n  delete entry.hash;\n  entry.type = entry.type === 1 ? 'directory' : 'file';\n  return entry;\n}\n\nexports.createLs = createLs;","map":null,"metadata":{},"sourceType":"script"}