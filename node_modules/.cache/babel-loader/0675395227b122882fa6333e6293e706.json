{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/anon/Documents/VSCode/dapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/anon/Documents/VSCode/dapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _awaitAsyncGenerator = require(\"/Users/anon/Documents/VSCode/dapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/anon/Documents/VSCode/dapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cid = require('multiformats/cid');\n\nvar errCode = require('err-code');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nfunction resolve(_x, _x2, _x3, _x4, _x5) {\n  return _resolve.apply(this, arguments);\n}\n\nfunction _resolve() {\n  _resolve = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(cid$1, path, codecs, getBlock, options) {\n    var load, parts, value, lastCid, key, _cid$;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            load = /*#__PURE__*/function () {\n              var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cid) {\n                var codec, block;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return codecs.getCodec(cid.code);\n\n                      case 2:\n                        codec = _context.sent;\n                        _context.next = 5;\n                        return getBlock(cid, options);\n\n                      case 5:\n                        block = _context.sent;\n                        return _context.abrupt(\"return\", codec.decode(block));\n\n                      case 7:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function load(_x6) {\n                return _ref.apply(this, arguments);\n              };\n            }();\n\n            parts = path.split('/').filter(Boolean);\n            _context2.next = 4;\n            return _awaitAsyncGenerator(load(cid$1));\n\n          case 4:\n            value = _context2.sent;\n            lastCid = cid$1;\n\n            if (parts.length) {\n              _context2.next = 9;\n              break;\n            }\n\n            _context2.next = 9;\n            return {\n              value: value,\n              remainderPath: ''\n            };\n\n          case 9:\n            if (!parts.length) {\n              _context2.next = 28;\n              break;\n            }\n\n            key = parts.shift();\n\n            if (key) {\n              _context2.next = 13;\n              break;\n            }\n\n            throw errCode__default['default'](new Error(\"Could not resolve path \\\"\".concat(path, \"\\\"\")), 'ERR_INVALID_PATH');\n\n          case 13:\n            if (!Object.prototype.hasOwnProperty.call(value, key)) {\n              _context2.next = 19;\n              break;\n            }\n\n            value = value[key];\n            _context2.next = 17;\n            return {\n              value: value,\n              remainderPath: parts.join('/')\n            };\n\n          case 17:\n            _context2.next = 20;\n            break;\n\n          case 19:\n            throw errCode__default['default'](new Error(\"no link named \\\"\".concat(key, \"\\\" under \").concat(lastCid)), 'ERR_NO_LINK');\n\n          case 20:\n            _cid$ = cid.CID.asCID(value);\n\n            if (!_cid$) {\n              _context2.next = 26;\n              break;\n            }\n\n            lastCid = _cid$;\n            _context2.next = 25;\n            return _awaitAsyncGenerator(load(value));\n\n          case 25:\n            value = _context2.sent;\n\n          case 26:\n            _context2.next = 9;\n            break;\n\n          case 28:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _resolve.apply(this, arguments);\n}\n\nexports.resolve = resolve;","map":null,"metadata":{},"sourceType":"script"}