{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/anon/Documents/VSCode/dapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/anon/Documents/VSCode/dapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/anon/Documents/VSCode/dapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/anon/Documents/VSCode/dapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _digest = require('./digest.js');\n\nvar from = function from(_ref) {\n  var name = _ref.name,\n      code = _ref.code,\n      encode = _ref.encode;\n  return new Hasher(name, code, encode);\n};\n\nvar Hasher = /*#__PURE__*/function () {\n  function Hasher(name, code, encode) {\n    _classCallCheck(this, Hasher);\n\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n\n  _createClass(Hasher, [{\n    key: \"digest\",\n    value: function () {\n      var _digest2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(input) {\n        var digest$1;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(input instanceof Uint8Array)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 3;\n                return this.encode(input);\n\n              case 3:\n                digest$1 = _context.sent;\n                return _context.abrupt(\"return\", _digest.create(this.code, digest$1));\n\n              case 7:\n                throw Error('Unknown type, must be binary type');\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function digest(_x) {\n        return _digest2.apply(this, arguments);\n      }\n\n      return digest;\n    }()\n  }]);\n\n  return Hasher;\n}();\n\nexports.Hasher = Hasher;\nexports.from = from;","map":null,"metadata":{},"sourceType":"script"}