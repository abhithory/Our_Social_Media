{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/anon/Documents/VSCode/dapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/anon/Documents/VSCode/dapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\n\nvar _awaitAsyncGenerator = require(\"/Users/anon/Documents/VSCode/dapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/anon/Documents/VSCode/dapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/Users/anon/Documents/VSCode/dapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar multiaddr = require('multiaddr');\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar responseTypes = require('./response-types.js');\n\nvar createFindProvs = configure.configure(function (api) {\n  function findProvs(_x) {\n    return _findProvs.apply(this, arguments);\n  }\n\n  function _findProvs() {\n    _findProvs = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cid) {\n      var options,\n          res,\n          _iteratorAbruptCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          message,\n          _iterator2,\n          _step2,\n          _step2$value,\n          ID,\n          Addrs,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return _awaitAsyncGenerator(api.post('dht/findprovs', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams.toUrlSearchParams(_objectSpread({\n                  arg: cid.toString()\n                }, options)),\n                headers: options.headers\n              }));\n\n            case 3:\n              res = _context.sent;\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 6;\n              _iterator = _asyncIterator(res.ndjson());\n\n            case 8:\n              _context.next = 10;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 10:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 33;\n                break;\n              }\n\n              message = _step.value;\n\n              if (!(message.Type === responseTypes.Provider && message.Responses)) {\n                _context.next = 30;\n                break;\n              }\n\n              _iterator2 = _createForOfIteratorHelper(message.Responses);\n              _context.prev = 14;\n\n              _iterator2.s();\n\n            case 16:\n              if ((_step2 = _iterator2.n()).done) {\n                _context.next = 22;\n                break;\n              }\n\n              _step2$value = _step2.value, ID = _step2$value.ID, Addrs = _step2$value.Addrs;\n              _context.next = 20;\n              return {\n                id: ID,\n                addrs: (Addrs || []).map(function (a) {\n                  return new multiaddr.Multiaddr(a);\n                })\n              };\n\n            case 20:\n              _context.next = 16;\n              break;\n\n            case 22:\n              _context.next = 27;\n              break;\n\n            case 24:\n              _context.prev = 24;\n              _context.t0 = _context[\"catch\"](14);\n\n              _iterator2.e(_context.t0);\n\n            case 27:\n              _context.prev = 27;\n\n              _iterator2.f();\n\n              return _context.finish(27);\n\n            case 30:\n              _iteratorAbruptCompletion = false;\n              _context.next = 8;\n              break;\n\n            case 33:\n              _context.next = 39;\n              break;\n\n            case 35:\n              _context.prev = 35;\n              _context.t1 = _context[\"catch\"](6);\n              _didIteratorError = true;\n              _iteratorError = _context.t1;\n\n            case 39:\n              _context.prev = 39;\n              _context.prev = 40;\n\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 44;\n                break;\n              }\n\n              _context.next = 44;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 44:\n              _context.prev = 44;\n\n              if (!_didIteratorError) {\n                _context.next = 47;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 47:\n              return _context.finish(44);\n\n            case 48:\n              return _context.finish(39);\n\n            case 49:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[6, 35, 39, 49], [14, 24, 27, 30], [40,, 44, 48]]);\n    }));\n    return _findProvs.apply(this, arguments);\n  }\n\n  return findProvs;\n});\nexports.createFindProvs = createFindProvs;","map":null,"metadata":{},"sourceType":"script"}