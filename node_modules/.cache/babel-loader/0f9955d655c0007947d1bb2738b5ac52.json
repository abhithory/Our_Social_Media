{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/anon/Documents/VSCode/dapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _regeneratorRuntime = require(\"/Users/anon/Documents/VSCode/dapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncIterator = require(\"/Users/anon/Documents/VSCode/dapper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar errCode = require('err-code');\n\nvar itPeekable = require('it-peekable');\n\nvar browserStreamToIt = require('browser-readablestream-to-it');\n\nvar all = require('it-all');\n\nvar utils = require('./utils.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nvar itPeekable__default = /*#__PURE__*/_interopDefaultLegacy(itPeekable);\n\nvar browserStreamToIt__default = /*#__PURE__*/_interopDefaultLegacy(browserStreamToIt);\n\nvar all__default = /*#__PURE__*/_interopDefaultLegacy(all);\n\nfunction normaliseContent(_x) {\n  return _normaliseContent.apply(this, arguments);\n}\n\nfunction _normaliseContent() {\n  _normaliseContent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(input) {\n    var peekable, _yield$peekable$peek, value, done;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!utils.isBytes(input)) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", new Blob([input]));\n\n          case 2:\n            if (!(typeof input === 'string' || input instanceof String)) {\n              _context2.next = 4;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", new Blob([input.toString()]));\n\n          case 4:\n            if (!utils.isBlob(input)) {\n              _context2.next = 6;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", input);\n\n          case 6:\n            if (utils.isReadableStream(input)) {\n              input = browserStreamToIt__default['default'](input);\n            }\n\n            if (!(Symbol.iterator in input || Symbol.asyncIterator in input)) {\n              _context2.next = 28;\n              break;\n            }\n\n            peekable = itPeekable__default['default'](input);\n            _context2.next = 11;\n            return peekable.peek();\n\n          case 11:\n            _yield$peekable$peek = _context2.sent;\n            value = _yield$peekable$peek.value;\n            done = _yield$peekable$peek.done;\n\n            if (!done) {\n              _context2.next = 16;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", itToBlob(peekable));\n\n          case 16:\n            peekable.push(value);\n\n            if (!Number.isInteger(value)) {\n              _context2.next = 26;\n              break;\n            }\n\n            _context2.t0 = Blob;\n            _context2.t1 = Uint8Array;\n            _context2.next = 22;\n            return all__default['default'](peekable);\n\n          case 22:\n            _context2.t2 = _context2.sent;\n            _context2.t3 = _context2.t1.from.call(_context2.t1, _context2.t2);\n            _context2.t4 = [_context2.t3];\n            return _context2.abrupt(\"return\", new _context2.t0(_context2.t4));\n\n          case 26:\n            if (!(utils.isBytes(value) || typeof value === 'string' || value instanceof String)) {\n              _context2.next = 28;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", itToBlob(peekable));\n\n          case 28:\n            throw errCode__default['default'](new Error(\"Unexpected input: \".concat(input)), 'ERR_UNEXPECTED_INPUT');\n\n          case 29:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _normaliseContent.apply(this, arguments);\n}\n\nfunction itToBlob(stream) {\n  var parts, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, chunk;\n\n  return _regeneratorRuntime.async(function itToBlob$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          parts = [];\n          _iteratorAbruptCompletion = false;\n          _didIteratorError = false;\n          _context.prev = 3;\n          _iterator = _asyncIterator(stream);\n\n        case 5:\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(_iterator.next());\n\n        case 7:\n          if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n            _context.next = 13;\n            break;\n          }\n\n          chunk = _step.value;\n          parts.push(chunk);\n\n        case 10:\n          _iteratorAbruptCompletion = false;\n          _context.next = 5;\n          break;\n\n        case 13:\n          _context.next = 19;\n          break;\n\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](3);\n          _didIteratorError = true;\n          _iteratorError = _context.t0;\n\n        case 19:\n          _context.prev = 19;\n          _context.prev = 20;\n\n          if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n            _context.next = 24;\n            break;\n          }\n\n          _context.next = 24;\n          return _regeneratorRuntime.awrap(_iterator.return());\n\n        case 24:\n          _context.prev = 24;\n\n          if (!_didIteratorError) {\n            _context.next = 27;\n            break;\n          }\n\n          throw _iteratorError;\n\n        case 27:\n          return _context.finish(24);\n\n        case 28:\n          return _context.finish(19);\n\n        case 29:\n          return _context.abrupt(\"return\", new Blob(parts));\n\n        case 30:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[3, 15, 19, 29], [20,, 24, 28]], Promise);\n}\n\nexports.normaliseContent = normaliseContent;","map":null,"metadata":{},"sourceType":"script"}